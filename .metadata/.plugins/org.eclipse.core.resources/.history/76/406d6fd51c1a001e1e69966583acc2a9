package com.dxc1.controller;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.dxc1.exception.ProductExistsException;
import com.dxc1.model.Order;

import com.dxc1.model.Products;
import com.dxc1.service.ProductService;
import com.dxc1.model.Payment;
import com.dxc1.model.Rating;




@CrossOrigin(origins="http://localhost:4200")
@RestController
@RequestMapping("/sell")
public class ProductController {
	
	@Autowired
	private ProductService productService;
	
	
	
	//@PostMapping({"/createProduct"})
	//public Product addNewProduct(@RequestBody Product product) {
		//return productService.createProduct(product);
		
	//}
	
	@GetMapping("/greet")

    public String welcome(){

        return "admin page is working";

    }
	
	@PostMapping("/products")
    public ResponseEntity<?> createProduct(@RequestBody Products products) throws ProductExistsException {
        return new ResponseEntity<>(productService.createProduct(products), HttpStatus.CREATED);
    }
	
	@GetMapping({"/products"})
	public List<Products>getAllProducts(){
		return productService.getAllProducts();
		
	}
	
	@PutMapping("/products/{productId}")

    public void updateProduct(@PathVariable int productId,@RequestBody Products products) {

        productService.updateProduct(productId, products);

    }
	@DeleteMapping("/products/{productId}")

    public void deleteProduct(@PathVariable int productId) {

        productService.deleteProduct(productId);

     }
	
	@GetMapping("/products/{productId}") 
    public List<Products> getProductById(@PathVariable int productId) { 
    	return productService.getProductById(productId);
    }
	
//	@GetMapping("/products/{productName}")
//
//    public List<Product> getByProductname(@PathVariable String productName) {
//
//        return productService.getAllProductByProductname(productName);
//}
	
	
	//connection of micro services:
	
	@Autowired
	private RestTemplate restTemplate;	
	
	@SuppressWarnings("unchecked")
	@GetMapping("/orders")
    public List<Order> getOrders(){
		
		List<Order> order = null;
		String url = "http://localhost:8098/buy/allorders";
		try {
			order=restTemplate.getForObject(url, List.class);
		}catch(Exception ex) {
			ex.printStackTrace();
		}
        return order;
    }
	
	
	@SuppressWarnings("unchecked")
	@GetMapping("/orders/{productid}")
		public List<Orders> getOrdersByProduct(@PathVariable int productid){
		
		List<Orders> orders = null;
		
		String url = "http://localhost:8098/buy/proname/"+productid;
		try {
			orders=restTemplate.getForObject(url, List.class);
		}catch(Exception ex) {
			ex.printStackTrace();
		}
        return orders;
    }
	
	
	
	@SuppressWarnings("unchecked")
	@GetMapping("/payment")
	public List<Payment> getAllPayments(){ 
		
		List<Payment> payes =null;
		String url ="http://localhost:9940/pay/payment";
		try {
			payes=restTemplate.getForObject(url, List.class);
		}catch(Exception ex) {
			ex.printStackTrace();
		}
		return payes;
       
	}
	
	@SuppressWarnings("unchecked")
	@GetMapping("/seller/allratings")
	public List<Rating> getAllRatings(){ 
		
		List<Rating> rate=null;
		String url ="http://localhost:8082/custom/allratings";
		try {
			rate=restTemplate.getForObject(url, List.class);
		}catch(Exception ex) {
			ex.printStackTrace();
		}
        return rate;
	}
	
	
	
		
		
	
	
       
	
	
	
}
	
	 
	 
	 
	

		
		
		
		
		
		
	 
	 
	 
	 
	 

